/*
 * "Azbooka" choicebox theme
 *
 * Â© 2009,2010 Mikhail Gusarov <dottedmag@dottedmag.net>
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#ifndef MIN_HEIGHT_VALUE
#define MIN_HEIGHT_VALUE 76
#endif

images {
    image, "marker.png" COMP;
    image, "filler.png" COMP;

    image, "full-right-border.png" COMP;
    image, "full-left-border.png" COMP;
    image, "decoration.png" COMP;
}

styles {
    style {
        name, "titles";
        base, "font=DejaVu\\ Sans\\ Conensed:style=bold font_size=22 color=#000 align=left valign=top wrap=word";
        tag, "inactive" "+color=#888";
        tag, "/inactive" "-";
    }

    style {
        name, "item-settings-title";
        base, "font=DejaVu\\ Sans\\ Condensed:style=bold font_size=22 color=#000 align=left wrap=word";
        tag, "inactive" "+color=#888";
            tag, "/inactive" "-";
    }
    style {
        name, "item-settings-value";
        base, "font=DejaVu\\ Sans\\ Condensed font_size=18 color=#000 align=right";
        tag, "inactive" "+color=#888";
        tag, "/inactive" "-";
    }
}

collections {
   group {
      name, "full-background";

      parts {
         part {
            name, "background";
            type, RECT;
            description {
               state, "default" 0.0;
               color, 204 204 204 255;
            }
         }
         part {
             name, "left-side";
             type, RECT;
             description {
                 state, "default" 0.0;
                 color, 0 0 0 0;
                 rel2 { relative, 0.0 1.0; offset, -1 -1; }
             }
             description {
                 state, "hinted" 0.0;
                 inherit, "default" 0.0;
                 rel2 { relative, 0.0 1.0; offset, 48 -1; }
             }
         }

         part {
            name, "left-border";
            description {
               state, "default" 0.0;
               rel1 { to, "left-side"; relative, 1.0 0.0; }
               rel2 { to, "left-side"; relative, 1.0 1.0; offset, 39 0; }
               image { normal, "full-left-border.png"; }
               fill {
                  size {
                     relative, 0.0 0.0;
                     offset, 39 1;
                  }
               }
            }
         }
         part {
            name, "decoration";
            description {
               state, "default" 0.0;
               rel1 { to, "left-side"; relative, 1.0 0.0; offset, 11 9; }
               rel2 { to, "left-side"; relative, 1.0 1.0; offset, 33 -1; }
               image { normal, "decoration.png"; }
               fill {
                  size { relative, 0.0 0.0; offset, 23 16; }
               }
            }
         }
         part {
            name, "right-border";
            description {
               state, "default" 0.0;
               rel1 { relative, 1.0 0.0; offset, -6 0; }
               image { normal, "full-right-border.png"; }
               fill {
                  size { relative, 0.0 0.0; offset, 5 1; }
               }
            }
         }
      }
      programs {
          program {
              name, "non-hinted";
              signal, "non-hinted";
              script {
                  set_state(PART:"left-side", "default", 0.0);
              }
          }
          program {
              name, "hinted";
              signal, "hinted";
              script {
                  set_state(PART:"left-side", "hinted", 0.0);
              }
          }
      }
   }
   group {
      name, "full";
      parts {
         part {
            name, "clipper";
            type, RECT;
            description {
               state, "default" 0.0;
               color, 255 255 255 0;
            }
            description {
               state, "enabled" 0.0;
               color, 255 255 255 255;
            }
         }
         part {
             name, "sel-clipper";
             type, RECT;
             description {
                 state, "default" 0.0;
                 color, 255 255 255 0;
             }
             description {
                 state, "enabled" 0.0;
                 color, 255 255 255 255;
             }
         }
         part {
             name, "sel-left";
             type, IMAGE;
             clip_to, "sel-clipper";
             description {
                 state, "default" 0.0;
                 rel1 { offset, 39 3; }
                 rel2 { relative, 0.0 1.0; offset, 49 -4; }
                 image { normal, "marker.png"; }
             }
             description {
                 state, "numbered" 0.0;
                 inherit, "default" 0.0;
                 rel1 { offset, 88 3; }
                 rel2 { relative, 0.0 1.0; offset, 98 -4; }
             }
         }
         part {
             name, "sel-right";
             type, IMAGE;
             clip_to, "sel-clipper";
             description {
                 state, "default" 0.0;
                 rel1 { relative, 1.0 0.0; offset, -17 3; }
                 rel2 { offset, -7 -4; }
                 image { normal, "marker.png"; }
             }
         }
         part {
             name, "contents";
             type, SWALLOW;
             clip_to, "clipper";
             description {
                 state, "default" 0.0;
                 rel1 { offset, 55 0; }
                 rel2 { offset, -24 -1; }
             }
             description {
                 state, "numbered" 0.0;
                 rel1 { offset, 104 0; }
                 rel2 { offset, -24 -1; }
             }
         }
         part {
             name, "marks";
             images {
                 image, "1.png" COMP;
                 image, "2.png" COMP;
                 image, "3.png" COMP;
                 image, "4.png" COMP;
                 image, "5.png" COMP;
                 image, "6.png" COMP;
                 image, "7.png" COMP;
                 image, "8.png" COMP;
                 image, "9.png" COMP;
                 image, "none.png" COMP;
             }
             clip_to, "clipper";
             description {
                 state, "default" 0.0;
                 rel1 { offset, 15 20; }
                 rel2 { relative, 0.0 0.0; offset, 50 55; }
                 image { normal, "none.png"; }
             }
             description {
                 state, "0,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "1.png"; }
             }
             description {
                 state, "1,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "2.png"; }
             }
             description {
                 state, "2,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "3.png"; }
             }
             description {
                 state, "3,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "4.png"; }
             }
             description {
                 state, "4,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "5.png"; }
             }
             description {
                 state, "5,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "6.png"; }
             }
             description {
                 state, "6,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "7.png"; }
             }
             description {
                 state, "7,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "8.png"; }
             }
             description {
                 state, "8,hinted" 0.0;
                 inherit, "default" 0.0;
                 image { normal, "9.png"; }
             }
         }
      }
      data {
          item, "min_height" MIN_HEIGHT_VALUE; /* HACK: until edje fetches size_hints */
          item, "margin_left" 0;
          item, "margin_right" 7;
          item, "margin_top" 0;
          item, "margin_bottom" 0;
      }
      programs {
          program {
              name, "set_number";
              signal, "set_number,*";
              script {
                  new number_arg[100];
                  getsarg(0, number_arg, 100);
                  new number_s[100];
                  strcut(number_s, number_arg, 11, 100);

                  getsarg(0, number_arg, 100);
                  new is_hinted_s[100];
                  strcut(is_hinted_s, number_arg, 13, 100);

                  if (!strcmp(is_hinted_s, "hinted")) {
                      set_state(PART:"marks", number_s, 0.0);
                      set_state(PART:"sel-left", "numbered", 0.0);
                      set_state(PART:"contents", "numbered", 0.0);
                  } else {
                      set_state(PART:"marks", "default", 0.0);
                      set_state(PART:"sel-left", "default", 0.0);
                      set_state(PART:"contents", "default", 0.0);
                  }

                  set_state(PART:"clipper", "enabled", 0.0);
              }
          }
          program {
              name, "deselect";
              signal, "deselect";
              script {
                  set_state(PART:"sel-clipper", "default", 0.0);
              }
          }
          program {
             name, "select";
             signal, "select";
             script {
                set_state(PART:"sel-clipper", "enabled", 0.0);
             }
          }
          program {
             name, "empty";
             signal, "empty";
             script {
                set_state(PART:"clipper", "default", 0.0);
             }
          }
      }
   }

   group {
      name, "settings-left";
      parts {
         part {
            name, "clipper";
            type, RECT;
            description {
               state, "default" 0.0;
               color, 255 255 255 0;
            }
            description {
               state, "enabled" 0.0;
               color, 255 255 255 255;
            }
         }
         part {
             name, "sel-clipper";
             type, RECT;
             description {
                 state, "default" 0.0;
                 color, 255 255 255 0;
             }
             description {
                 state, "enabled" 0.0;
                 color, 255 255 255 255;
             }
         }
         part {
             name, "sel-left";
             type, IMAGE;
             clip_to, "sel-clipper";
             description {
                 state, "default" 0.0;
                 rel1 { offset, 0 3; }
                 rel2 { relative, 0.0 1.0; offset, 10 -4; }
                 image { normal, "marker.png"; }
             }
         }
         part {
             name, "contents";
             type, SWALLOW;
             clip_to, "clipper";
             description {
                 state, "default" 0.0;
                 rel1 { offset, 16 0; }
                 rel2 { offset, -4 -1; }
             }
         }
      }
      data {
          item, "min_height" MIN_HEIGHT_VALUE; /* HACK: until edje fetches size_hints */
          item, "margin_left" 39;
          item, "margin_right" 7;
          item, "margin_top" 0;
          item, "margin_bottom" 0;
      }
      programs {
          program {
              name, "select";
              signal, "select";
              script {
                  set_state(PART:"sel-clipper", "enabled", 0.0);
              }
          }
          program {
              name, "deselect";
              signal, "deselect";
              script {
                  set_state(PART:"sel-clipper", "default", 0.0);
              }
          }
          program {
             name, "set_number";
             signal, "set_number,*";
             script {
                set_state(PART:"clipper", "enabled", 0.0);
             }
          }
          program {
             name, "empty";
             signal, "empty";
             script {
                set_state(PART:"clipper", "default", 0.0);
             }
          }
      }
   }
    group {
        name, "settings-right";
        parts {
            part {
                name, "clipper";
                type, RECT;
                description {
                    state, "default" 0.0;
                    color, 255 255 255 0;
                }
                description {
                    state, "enabled" 0.0;
                    color, 255 255 255 255;
                }
            }
            part {
                name, "sel-clipper";
                type, RECT;
                description {
                    state, "default" 0.0;
                    color, 255 255 255 0;
                }
                description {
                    state, "enabled" 0.0;
                    color, 255 255 255 255;
                }
            }
            part {
                name, "sel-right";
                type, IMAGE;
                clip_to, "sel-clipper";
                description {
                    state, "default" 0.0;
                    rel1 { relative, 1.0 0.0; offset, -12 3; }
                    rel2 { offset, -1 -4; }
                    image { normal, "marker.png"; }
                }
            }
            part {
                name, "contents";
                type, SWALLOW;
                clip_to, "clipper";
                description {
                    state, "default" 0.0;
                    rel1 { offset, 3 0; }
                    rel2 { offset, -17 -1; }
                }
            }
        }
        data {
            item, "min_height" MIN_HEIGHT_VALUE; /* HACK: until edje fetches size_hints */
            item, "margin_left" 7;
            item, "margin_right" 39;
            item, "margin_top" 0;
            item, "margin_bottom" 0;
        }
        programs {
            program {
                name, "select";
                signal, "select";
                script {
                    set_state(PART:"sel-clipper", "enabled", 0.0);
                }
            }
            program {
                name, "deselect";
                signal, "deselect";
                script {
                    set_state(PART:"sel-clipper", "default", 0.0);
                }
            }
            program {
                name, "set_number";
                signal, "set_number,*";
                script {
                    set_state(PART:"clipper", "enabled", 0.0);
                }
            }
            program {
                name, "empty";
                signal, "empty";
                script {
                    set_state(PART:"clipper", "default", 0.0);
                }
            }
        }
    }

    group {
        name, "full-filler";
        parts {
            part {
                name, "filler";
                description {
                    state, "default" 0.0;
                    rel1 { offset, 51 0; }
                    rel2 { offset, -19 -1; }
                    image { normal, "filler.png"; }
                    fill {
                        size {
                            relative, 0.0 0.0;
                            offset, 8 2;
                        }
                    }
                }
                description {
                    state, "hinted" 0.0;
                    inherit, "default" 0.0;
                    rel1 { offset, 100 0; }
                }
            }
        }
        data {
            item, "height" 2;
        }
        programs {
            program {
                name, "non-hinted";
                signal, "non-hinted";
                script {
                    set_state(PART:"filler", "default", 0.0);
                }
            }
            program {
                name, "hinted";
                signal, "hinted";
                script {
                    set_state(PART:"filler", "hinted", 0.0);
                }
            }
        }
    }

    group {
        name, "settings-left-background";
        alias, "settings-right-background";
        parts {}
    }

    group {
        name, "settings-left-filler";
        parts {
            part {
                name, "filler";
                type, RECT;
                description {
                    state, "default" 0.0;
                    color, 85 85 85 255;
                    rel1 { offset, 12 0; }
                    rel2 { offset, -4 -1; }
                }
            }
        }
        data { item, "height" 2; }
    }
    group {
        name, "settings-right-filler";
        parts {
            part {
                name, "filler";
                type, RECT;
                description {
                    state, "default" 0.0;
                    color, 85 85 85 255;
                    rel1 { offset, 3 0; }
                    rel2 { offset, -13 -1; }
                }
            }
        }
        data { item, "height" 2; }
    }

   group {
      name, "item-default";
      styles {
          style {
              name, "item-texts";
              base, "font=DejaVu\\ Sans\\ Condensed:style=bold font_size=22 color=#000 align=left";
          }
      }
      parts {
         part {
            name, "text";
            type, TEXTBLOCK;
            description {
               state, "default" 0.0;
               color, 0 0 0 255;
               text {
                  style, "item-texts";
                  max, 0 1;
               }
               align, 0 0.5;
               rel1 { relative, 0.0 0.0; offset, 3 0; }
               rel2 { relative, 1.0 1.0; offset, -4 -1; }
            }
         }
      }
   }

   group {
       name, "item-settings-fullscreen";
       parts {
           /* Big text in the center of item */
           part {
               name, "title";
               type, TEXTBLOCK;
               multiline, 1;
               description {
                   state, "default" 0.0;
                   text { style, "item-settings-title"; max, 0 1; }
               }
           }
           /* Smallish text at the bottom right */
           part {
               name, "value";
               type, TEXTBLOCK;
               styles {
               }
               description {
                   state, "default" 0.0;
                    text { style, "item-settings-value"; }
                    rel1 { offset, 0 49; }
               }
           }
       }
   }
   group {
       name, "item-settings";
       parts {
           /* Big text in the center of item */
           part {
               name, "title";
               type, TEXTBLOCK;
               multiline, 1;
               description {
                   state, "default" 0.0;
                   text { style, "item-settings-title"; }
                   rel1 { offset, 0 2; }
               }
           }
           /* Smallish text at the bottom right */
           part {
               name, "value";
               type, TEXTBLOCK;
               styles {
               }
               description {
                   state, "default" 0.0;
                    text { style, "item-settings-value"; }
                    rel1 { offset, 0 49; }
               }
           }
       }
   }
}
